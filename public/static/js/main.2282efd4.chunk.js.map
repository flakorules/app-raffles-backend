{"version":3,"sources":["components/ui/ShoppingCartNavBar.js","services/rafflesApi.service.js","types/types.js","actions/auth.action.js","components/ui/UserProfileNavBar.js","components/ui/Navbar.js","components/ui/UserMenuNavBar.js","helpers/validation.helper.js","actions/cart.action.js","components/ui/CartFormRow.js","components/ui/CartForm.js","validators/cart.validator.js","screens/private/Cart.js","actions/createRaffle.action.js","components/ui/PrizeCard.js","components/ui/PrizeCardList.js","common/defaultData.js","validators/createRaffle.validator.js","components/ui/PrizeForm.js","screens/private/CreateRaffle.js","screens/private/Dashboard.js","actions/editRaffle.action.js","components/ui/EditPrizeCard.js","components/ui/EditPrizeCardList.js","components/ui/EditPrizeForm.js","components/ui/EditPrizesForm.js","components/ui/EditRaffleForm.js","validators/editRaffle.validator.js","components/ui/AddListsColaborativeRaffle.js","components/ui/AddTicketsSimpleRaffle.js","components/ui/OtherActionsForm.js","common/statusHelper.js","components/ui/RaffleListsAdminRow.js","components/ui/RaffleListsAdmin.js","screens/private/EditRaffle.js","screens/private/MyCollaborations.js","screens/private/MyParticipations.js","actions/myRaffles.action.js","screens/private/MyRaffles.js","screens/public/Contact.js","screens/public/Home.js","screens/public/Login.js","hooks/useForm.js","validators/login.validator.js","actions/viewRaffle.action.js","components/ui/RaffleMainData.js","components/ui/TicketCard.js","components/ui/TicketCardList.js","components/ui/ViewPrizeCard.js","components/ui/ViewPrizeCardList.js","components/ui/ViewRaffleListCard.js","components/ui/ViewRaffleList.js","screens/public/Raffle.js","actions/viewRaffleList.action.js","screens/public/RaffleList.js","router/PrivateRouter.js","router/AppRouter.js","reducers/authReducer.js","reducers/createRaffleReducer.js","reducers/editRaffleReducer.js","reducers/myRafflesReducer.js","reducers/viewRaffleReducer.js","reducers/viewRaffleListReducer.js","reducers/cartReducer.js","reducers/rootReducer.js","store/store.js","App.js","index.js"],"names":["ShoppingCartNavBar","tickets","useSelector","state","cart","length","className","to","icon","faShoppingCart","baseUrl","process","createRaffleService","raffleData","prizes","a","fetch","method","headers","localStorage","getItem","body","JSON","stringify","response","json","data","loginService","formData","console","log","getMyRaffles","userName","getRaffleDataService","alias","getListByAliasAndListNumberService","listNumber","getTicketsFromRaffleListService","getTicketsFromRaffleService","getRaffleListsService","getPrizesService","deletePrizeService","prizeId","addPrizeService","raffleId","prize","updatePrizeService","_id","updateRaffleDataService","id","assignListToUserService","raffleListId","user","addListsToRaffleService","addTicketsToRaffleService","bookTicketService","ticket","unbookTicketService","types","login","type","payload","logout","UserProfileNavBar","uid","auth","dispatch","useDispatch","activeClassName","faColumns","onClick","clear","faSignOutAlt","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","faSignInAlt","UserMenuNavBar","role","formatValidationMessages","messages","messagesHtml","reduce","acc","cur","formatValidationMessagesFromApi","Object","keys","curr","msg","bookTicketSimpleRaffle","bookTicketColaborativeRaffle","addTicket","removeTicket","CartFormRow","useState","setFormData","handleChange","target","newState","name","value","editTicketData","title","code","onChange","email","phoneNumber","data-placement","Swal","fire","showConfirmButton","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","ok","html","errors","startRemoveTicket","faTrashAlt","CartForm","scope","map","params","validation","i","push","test","status","buyTicketsValidator","class","Cart","setRaffleData","setFlagSaved","flag","PrizeCard","description","e","preventDefault","selectPrize","faEdit","deletePrize","PrizeCardList","prizeList","tempId","initRafle","listQuantity","ticketsPerList","pricePerTicket","drawDate","Date","now","initPrize","loginFormData","password","prizeFormValidator","PrizeForm","activePrize","createRaffle","useEffect","placeholder","addPrize","uuidv4","faPlus","CreateRaffle","flagSaved","history","useHistory","onSubmit","createRaffleValidator","getState","text","htmlFor","selected","date","onHandleDrawDateChange","dateFormat","Dashboard","assignRaffleList","raffleList","getRaffleData","getPrizes","updatePrize","getRaffleLists","raffleLists","addLists","addTickets","updateListQuantity","EditPrizeCard","editRaffle","EditPrizeCardList","EditPrizeForm","selectedPrize","handleInputChange","startAddPrize","EditPrizesForm","EditRaffleForm","editRaffleValidator","format","startSaveRaffleData","defaultValue","readOnly","undefined","AddListsColaborativeRaffle","addListValidator","raffle","startAddLists","AddTicketsSimpleRaffle","addTicketsValidator","startAddTickets","OtherActionsForm","raffleStatusHelper","RaffleListsAdminRow","list","setUserName","userId","faAngleDoubleRight","RaffleListsAdmin","EditRaffle","props","match","startGetRaffleData","startGetPrizes","rafleLists","startGetRaffleLists","href","aria-selected","aria-labelledby","MyCollaborations","MyParticipations","myRaflessGetAll","raffles","MyRaffles","myRaffles","faEye","faDice","Contact","Home","Login","initialState","values","setValues","useForm","createLoginFormValidator","setItem","token","getTime","getTickets","RaffleMainData","source","viewRaffle","viewRaffleList","TicketCard","raffleListData","sequenceNumber","startAddTicket","faCartPlus","TicketCardList","ViewPrizeCard","ViewPrizeCardList","ViewRaffleListCard","faChevronRight","ViewRaffleList","Raffle","startGeRaffleLists","startGetTickets","getRaffleListData","getTicketsByList","RaffleList","startGetRaffleListData","startGetTicketsByList","PrivateRoute","isAuthenticated","Component","component","rest","AppRouter","path","exact","rootReducer","combineReducers","action","p","filter","rl","concat","t","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2282efd4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const ShoppingCartNavBar = () => {\r\n  const { tickets } = useSelector((state) => state.cart);\r\n\r\n  return (\r\n    <>\r\n      {tickets.length > 0 && (\r\n        <ul className=\"navbar-nav mr-auto navbar-dark bg-dark my-auto\">\r\n          <li className=\"nav-item\">\r\n            {/* <a className=\"text-light text-decoration-none\" href=\".\">\r\n              <FontAwesomeIcon icon={faShoppingCart} className=\"fa-2x\" />\r\n              <span className=\"pl-2 pr-5\">{tickets.length} tickets</span>\r\n            </a> */}\r\n\r\n            <NavLink\r\n              to=\"/cart\"\r\n              className=\"text-light text-decoration-none\"\r\n            >\r\n              <FontAwesomeIcon icon={faShoppingCart} className=\"fa-2x\" />\r\n              <span className=\"pl-2 pr-5\">{tickets.length} tickets</span>\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","const baseUrl = process.env.REACT_APP_RAFFLES_API;\r\n\r\nexport const createRaffleService = async (raffleData, prizes) => {\r\n  const response = await fetch(`${baseUrl}/raffles/new`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      \"x-token\": localStorage.getItem(\"token\") || \"\",\r\n    },\r\n    body: JSON.stringify({ ...raffleData, prizes: prizes }),\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  return data;\r\n};\r\n\r\nexport const loginService = async (formData) => {\r\n  console.log(\"loginService\", baseUrl);\r\n  const response = await fetch(`${baseUrl}/users/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(formData),\r\n  });\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport const getMyRaffles = async (userName) => {\r\n  const response = await fetch(`${baseUrl}/raffles/owner/${userName}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const getRaffleDataService = async (alias) => {\r\n  const response = await fetch(`${baseUrl}/raffles/${alias}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const getListByAliasAndListNumberService = async (alias, listNumber) => {\r\n  const response = await fetch(\r\n    `${baseUrl}/raffleLists/${alias}/list/${listNumber}`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const getTicketsFromRaffleListService = async (alias, listNumber) => {\r\n  const response = await fetch(\r\n    `${baseUrl}/tickets/${alias}/list/${listNumber}`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const getTicketsFromRaffleService = async (alias) => {\r\n  const response = await fetch(`${baseUrl}/tickets/${alias}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const getRaffleListsService = async (alias) => {\r\n  const response = await fetch(`${baseUrl}/raffleLists/${alias}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const getPrizesService = async (alias) => {\r\n  const response = await fetch(`${baseUrl}/prizes/${alias}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const deletePrizeService = async (prizeId) => {\r\n  const response = await fetch(`${baseUrl}/prizes/delete/${prizeId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      \"x-token\": localStorage.getItem(\"token\") || \"\",\r\n    },\r\n  });\r\n  return await response.json();\r\n};\r\n\r\nexport const addPrizeService = async (raffleId, prize) => {\r\n  const response = await fetch(`${baseUrl}/prizes/new/${raffleId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      \"x-token\": localStorage.getItem(\"token\") || \"\",\r\n    },\r\n    body: JSON.stringify(prize),\r\n  });\r\n  return await response.json();\r\n};\r\n\r\nexport const updatePrizeService = async (prize) => {\r\n  const response = await fetch(`${baseUrl}/prizes/update/${prize._id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      \"x-token\": localStorage.getItem(\"token\") || \"\",\r\n    },\r\n    body: JSON.stringify(prize),\r\n  });\r\n  return await response.json();\r\n};\r\n\r\nexport const updateRaffleDataService = async (id, raffleData) => {\r\n  const response = await fetch(`${baseUrl}/raffles/update/${id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      \"x-token\": localStorage.getItem(\"token\") || \"\",\r\n    },\r\n    body: JSON.stringify(raffleData),\r\n  });\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const assignListToUserService = async (raffleListId, user) => {\r\n  const response = await fetch(\r\n    `${baseUrl}/raffleLists/assign/${raffleListId}`,\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"x-token\": localStorage.getItem(\"token\") || \"\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    }\r\n  );\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const addListsToRaffleService = async (raffleId, formData) => {\r\n  console.log(formData);\r\n\r\n  const response = await fetch(\r\n    `${baseUrl}/raffles/colaborative/addLists/${raffleId}`,\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"x-token\": localStorage.getItem(\"token\") || \"\",\r\n      },\r\n      body: JSON.stringify(formData),\r\n    }\r\n  );\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const addTicketsToRaffleService = async (raffleId, formData) => {\r\n  const response = await fetch(\r\n    `${baseUrl}/raffles/simple/addTickets/${raffleId}`,\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"x-token\": localStorage.getItem(\"token\") || \"\",\r\n      },\r\n      body: JSON.stringify(formData),\r\n    }\r\n  );\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const bookTicketService = async (ticket) => {\r\n  console.log(localStorage.getItem(\"token\"));\r\n\r\n  const response = await fetch(`${baseUrl}/tickets/book/${ticket._id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      \"x-token\": localStorage.getItem(\"token\") || \"\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const unbookTicketService = async (ticket) => {\r\n  console.log(localStorage.getItem(\"token\"));\r\n\r\n  const response = await fetch(`${baseUrl}/tickets/unbook/${ticket._id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      \"x-token\": localStorage.getItem(\"token\") || \"\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n};\r\n\r\n","export const types = {\r\n  raffleFormSetRaffleData: \"[raffleForm] Set Raffle Data\",\r\n  raffleFormSetFlagSaved: \"[raffleForm] Set Flag Saved\",\r\n  raffleFormAddPrize: \"[raffleForm] Add Prize\",\r\n  raffleFormSelectPrize: \"[raffleForm] Select Prize\",\r\n  raffleFormCleanSelectedPrize: \"[raffleForm] Clean Selected Prize\",\r\n  raffleFormEditPrize: \"[raffleForm] Edit Prize\",\r\n  raffleFormDeletePrize: \"[raffleForm] Delete Prize\",\r\n  raffleFormCleanAll: \"[raffleForm] Clean All\",\r\n\r\n  authLogin: \"[auth] Login\",\r\n  authLogout: \"[auth] Logout\",\r\n\r\n  myRafflesGetAll: \"[myRaffles] GetAll\",\r\n\r\n  editRaffleGetData: \"[editRaffle] Get Data\",\r\n  editRaffleSelectPrize: \"[editRaffle] Select Prize\",\r\n  editRaffleGetPrizes: \"[editRaffle] Get Prizes\",\r\n  editRaffleDeletePrize: \"[editRaffle] Delete Prize\",\r\n  editRaffleAddPrize: \"[editRaffle] Add Prize\",\r\n  editRaffleUpdatePrize: \"[editRaffle] Update Prize\",\r\n  editRaffleCleanData: \"[editRaffle] Clean Data\",\r\n  editRaffleGetRaffleLists: \"[editRaffle] Get Raffle Lists\",\r\n  editRaffleAssignList:\"[editRaffle] Assign Raffle List\",\r\n  editRaffleAddLists:\"[editRaffle] Add Lists\",\r\n  editRaffleUpdateListQuantity:\"[editRaffle] Update List Quantity\",\r\n\r\n  editRaffleAddTickets:\"[editRaffle] Add Tickets\",\r\n\r\n  viewRaffleGetMainData:\"[viewRaffle] Get Main Data\",\r\n\r\n  viewRaffleGetPrizes:\"[viewRaffle] Get Prizes\",\r\n  viewRaffleCleanData:\"[viewRaffle] Clean Data\",\r\n  viewRaffleGetRaffleLists:\"[viewRaffle] Get Raffle Lists\",\r\n  viewRaffleGetTickets:\"[viewRaffle] Get Tickets\",\r\n\r\n  viewRaffleBookTicket:\"[viewRaffle] Book Ticket\",\r\n\r\n  viewRaffleListGetData:\"[viewRaffleList] Get Main data\",\r\n  viewRaffleListGetRaffeListData:\"[viewRaffleList] Get Raffle List data\",\r\n  viewRaffleListGetPrizes:\"[viewRaffleList] Get Prizes\",\r\n\r\n  viewRaffleListGetTickets:\"[viewRaffleList] Get Tickets\",\r\n  viewRaffleListBookTicket:\"[viewRaffleList] Book ticket\",\r\n\r\n  cartAddTicket: \"[cart] Add Ticket\",\r\n  cartRemoveTicket: \"[cart] Remove Ticket\",\r\n  cartEditTicketData: \"[cart] Edit Ticket Data\"\r\n\r\n\r\n  // uiOpenModal: '[ui] Open modal',\r\n  // uiCloseModal: '[ui] Close modal',\r\n\r\n  // eventSetActive: '[event] Set Active',\r\n  // eventLogout: '[event] Logout event',\r\n\r\n  // evetStartAddNew: '[event] Start add new',\r\n  // eventAddNew: '[event] Add new',\r\n  // eventClearActiveEvent: '[event] Clear active event',\r\n  // eventUpdated: '[event] Event updated',\r\n  // eventDeleted: '[event] Event deleted',\r\n  // eventLoaded: '[event] Events loaded',\r\n\r\n  // authCheckingFinish: '[auth] Finish checking login state',\r\n  // authStartLogin: '[auth] Start login',\r\n  // authLogin: '[auth] Login',\r\n  // authStartRegister: '[auth] Start Register',\r\n  // authStartStartTokenRenew: '[auth] Start token renew',\r\n  // authLogout: '[auth] Logout',\r\n};\r\n","import Swal from \"sweetalert2\";\r\n\r\nimport { loginService } from \"../services/rafflesApi.service\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = (formData) => {\r\n  return async (dispatch) => {\r\n    const data = await loginService(formData);\r\n    if (data.ok) {\r\n      localStorage.setItem(\"token\", data.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n      dispatch(\r\n        login({\r\n          uid: data.uid,\r\n          userName: data.userName,\r\n        })\r\n      );\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Error de autenticación:\",\r\n        html: `<p class=\"text-danger font-weight-bold\">${data.msg}</p>`,\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const login = (data) => ({\r\n  type: types.authLogin,\r\n  payload: data,\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear();\r\n\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { startLogout } from \"../../actions/auth.action\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faColumns, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const UserProfileNavBar = () => {\r\n  const { uid } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {uid && (\r\n        <>\r\n          <ul className=\"navbar-nav mr-auto navbar-dark bg-dark\">\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                to=\"/dashboard\"\r\n                className=\"nav-link\"\r\n                activeClassName=\"active\"\r\n              >\r\n                <FontAwesomeIcon icon={faColumns} className=\"fa-2x\" />\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <button\r\n                className=\"btn m-2 my-sm-0 text-light\"\r\n                onClick={handleLogout}\r\n              >\r\n                <FontAwesomeIcon icon={faSignOutAlt} className=\"fa-2x\" />\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { ShoppingCartNavBar } from \"./ShoppingCartNavBar\";\r\nimport { UserProfileNavBar } from \"./UserProfileNavBar\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const Navbar = () => {\r\n  //const uid = \"tereso\";\r\n  //const uid = null;\r\n  const { uid } = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <NavLink to=\"/\" className=\"navbar-brand\" activeClassName=\"active\">\r\n            Raffles\r\n          </NavLink>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item active\">\r\n                <NavLink to=\"/\" className=\"nav-link\">\r\n                  Home\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item active\">\r\n                <NavLink to=\"/contact\" className=\"nav-link\">\r\n                  Contacto\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n\r\n            <div className=\"d-flex flex-row justify-content-end\">\r\n              <ShoppingCartNavBar />\r\n              <UserProfileNavBar />\r\n            </div>\r\n            {!uid && (\r\n              <div className=\"justify-content-end\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <NavLink to=\"/login\" className=\"text-light\">\r\n                      <FontAwesomeIcon icon={faSignInAlt} className=\"fa-2x\" />\r\n                    </NavLink>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const UserMenuNavBar = () => {\r\n  const { uid,userName } = useSelector((state) => state.auth);\r\n  return (\r\n    <>\r\n      {uid && (\r\n        <div className=\"container mt-2 d-flex flex-row justify-content-center\">\r\n          <p className=\"my-auto pr-4 font-weight-bold\">Bienvenido {userName}</p>\r\n          <div\r\n            className=\"btn-toolbar justify-content-center\"\r\n            role=\"toolbar\"\r\n            aria-label=\"Toolbar with button groups\"\r\n          >\r\n            <div\r\n              className=\"btn-group mr-2\"\r\n              role=\"group\"\r\n              aria-label=\"First group\"\r\n            >\r\n              <NavLink to=\"/raffle/create\" className=\"btn btn-success\">\r\n                Crear Rifa\r\n              </NavLink>\r\n            </div>\r\n\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n              <NavLink to=\"/myRaffles\" className=\"btn btn-secondary\">\r\n                Mis Rifas\r\n              </NavLink>\r\n\r\n              <NavLink to=\"/raffles/collaborations\" className=\"btn btn-secondary\">\r\n                Mis Colaboraciones\r\n              </NavLink>\r\n\r\n              <NavLink to=\"/raffles/participations\" className=\"btn btn-secondary\">\r\n                Mis Participacioes\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export const formatValidationMessages = (messages = []) => {\r\n  const messagesHtml = messages.reduce(\r\n    (acc, cur) =>\r\n      `${acc}<li class='text-left text-danger font-weight-bold'>${cur}</li>`,\r\n    \"\"\r\n  );\r\n  return `<ul>${messagesHtml}</ul>`;\r\n};\r\n\r\nexport const formatValidationMessagesFromApi = (messages = {}) => {\r\n  const messagesHtml = Object.keys(messages).reduce((acc, curr) => {\r\n    return `${acc}<li class='text-left text-danger font-weight-bold'>${messages[curr].msg}</li>`;\r\n  }, \"\");\r\n  return `<ul>${messagesHtml}</ul>`;\r\n};\r\n","import Swal from \"sweetalert2\";\r\nimport { formatValidationMessagesFromApi } from \"../helpers/validation.helper\";\r\nimport {\r\n  bookTicketService,\r\n  unbookTicketService,\r\n} from \"../services/rafflesApi.service\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startAddTicket = (ticket) => {\r\n  return async (dispatch) => {\r\n    const data = await bookTicketService(ticket);\r\n\r\n    if (data.ok) {\r\n      dispatch(addTicket(data.ticket));\r\n\r\n      if (data.ticket.raffleId.type === \"simple\") {\r\n        dispatch(bookTicketSimpleRaffle(data.ticket));\r\n      } else if (data.ticket.raffleId.type === \"colaborative\") {\r\n        dispatch(bookTicketColaborativeRaffle(data.ticket));\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores agregar el ticket al carro:\",\r\n        html: formatValidationMessagesFromApi(data.errors),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const startRemoveTicket = (ticket) => {\r\n  return async (dispatch) => {\r\n    const data = await unbookTicketService(ticket);\r\n\r\n    if (data.ok) {\r\n      dispatch(removeTicket(data.ticket));\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores agregar el remover el ticket del carro:\",\r\n        html: formatValidationMessagesFromApi(data.errors),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nconst bookTicketSimpleRaffle = (ticket) => ({\r\n  type: types.viewRaffleBookTicket,\r\n  payload: ticket,\r\n});\r\n\r\nconst bookTicketColaborativeRaffle = (ticket) => ({\r\n  type: types.viewRaffleListBookTicket,\r\n  payload: ticket,\r\n});\r\n\r\nexport const addTicket = (ticket) => ({\r\n  type: types.cartAddTicket,\r\n  payload: ticket,\r\n});\r\n\r\nexport const removeTicket = (ticket) => ({\r\n  type: types.cartRemoveTicket,\r\n  payload: ticket,\r\n});\r\n\r\nexport const editTicketData = (ticket) => ({\r\n  type: types.cartEditTicketData,\r\n  payload: ticket,\r\n});","import { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { editTicketData, startRemoveTicket } from \"../../actions/cart.action\";\r\n\r\nexport const CartFormRow = ({ ticket }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formData, setFormData] = useState(ticket);\r\n\r\n  const handleChange = ({ target }) => {\r\n    const newState = {\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    };\r\n\r\n    setFormData(newState);\r\n\r\n    dispatch(editTicketData(newState));\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    Swal.fire({\r\n      icon: \"question\",\r\n      title: \"¿Confirma la eliminación del ticket?\",\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: `SI,Eliminar`,\r\n      cancelButtonText: \"NO\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(startRemoveTicket(ticket));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>{formData.raffleId.title}</td>\r\n      <td>{formData.code}</td>\r\n\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          id=\"name\"\r\n          className=\"form-control\"\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          id=\"email\"\r\n          className=\"form-control\"\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"phoneNumber\"\r\n          value={formData.phoneNumber}\r\n          onChange={handleChange}\r\n          id=\"phoneNumber\"\r\n          className=\"form-control\"\r\n        />\r\n      </td>\r\n\r\n      <td>\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"top\"\r\n          title=\"Tooltip on top\"\r\n          onClick={handleDelete}\r\n        >\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { formatValidationMessages } from \"../../helpers/validation.helper\";\r\nimport { buyTicketsValidator } from \"../../validators/cart.validator\";\r\nimport { CartFormRow } from \"./CartFormRow\";\r\n\r\nexport const CartForm = () => {\r\n  const { tickets } = useSelector((state) => state.cart);\r\n\r\n  const handleBuy = (params) => {\r\n    const validation = buyTicketsValidator(tickets);\r\n\r\n    if (validation.status) {\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores de validación en el formulario:\",\r\n        html: formatValidationMessages(validation.messages),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {tickets.length > 0 ? (\r\n        <>\r\n          <table className=\"table\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Titulo</th>\r\n                <th scope=\"col\">Código</th>\r\n                <th scope=\"col\">Nombre</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Teléfono</th>\r\n                <th scope=\"col\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tickets.map((ticket) => (\r\n                <CartFormRow key={ticket._id} ticket={ticket} />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={handleBuy}>\r\n            Comprar Tickets\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <div class=\"alert alert-warning\" role=\"alert\">\r\n          Carro de compras vacío\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export const buyTicketsValidator = (data = []) => {\r\n  let messages = [];\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (data[i].name === \"\") {\r\n      messages.push(`Ticket ${data[i].code}: Debe ingresar el nombre`);\r\n    }\r\n\r\n    if (data[i].email === \"\" || data[i].phoneNumber === \"\") {\r\n      messages.push(\r\n        `Ticket ${data[i].code}: Debe ingresar al menos un dato de contacto`\r\n      );\r\n    }\r\n\r\n    if (\r\n      data[i].email !== \"\" &&\r\n      !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\r\n        data[i].email\r\n      )\r\n    ) {\r\n      messages.push(`Ticket ${data[i].code}: Debe ingresar un email válido`);\r\n    }\r\n  }\r\n\r\n  return {\r\n    status: messages.length === 0,\r\n    messages,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { CartForm } from \"../../components/ui/CartForm\";\r\n\r\nexport const Cart = () => {\r\n  return (\r\n    <>\r\n      <h1>Carro de compras</h1>\r\n      <CartForm />\r\n    </>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\nimport { createRaffleService } from \"../services/rafflesApi.service\";\r\nimport Swal from \"sweetalert2\";\r\nimport { formatValidationMessagesFromApi } from \"../helpers/validation.helper\";\r\n\r\n\r\nexport const startCreateRaffle = () => {\r\n  return async (dispatch, getState) => {\r\n    const { raffleData, prizeList } = getState().createRaffle;\r\n    \r\n    const data = await createRaffleService(raffleData, prizeList);\r\n\r\n    dispatch(setFlagSaved(data.ok));\r\n\r\n    if (data.ok) {            \r\n      Swal.fire({\r\n        icon: \"success\",\r\n        text: \"La Rifa ha sido creada con éxito\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n      \r\n    } else {\r\n      \r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores al crear la Rifa:\",\r\n        html: formatValidationMessagesFromApi(data.errors),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setRaffleData = (raffleData) => ({\r\n  type: types.raffleFormSetRaffleData,\r\n  payload: raffleData,\r\n});\r\n\r\nexport const setFlagSaved = (flag) => ({\r\n  type: types.raffleFormSetFlagSaved,\r\n  payload: flag,\r\n});\r\n\r\nexport const addPrize = (prize) => ({\r\n  type: types.raffleFormAddPrize,\r\n  payload: prize,\r\n});\r\n\r\nexport const editPrize = (prize) => ({\r\n  type: types.raffleFormEditPrize,\r\n  payload: prize,\r\n});\r\n\r\nexport const selectPrize = (prize) => ({\r\n  type: types.raffleFormSelectPrize,\r\n  payload: prize,\r\n});\r\n\r\nexport const cleanPrize = () => ({\r\n  type: types.raffleFormCleanSelectedPrize,\r\n});\r\n\r\nexport const deletePrize = (prize) => ({\r\n  type: types.raffleFormDeletePrize,\r\n  payload: prize,\r\n});\r\n\r\nexport const cleanAll = () => ({\r\n  type: types.raffleFormCleanAll,\r\n});\r\n","import React from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deletePrize, selectPrize } from \"../../actions/createRaffle.action\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const PrizeCard = ({ prize }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n\r\n  const onClickEdit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(selectPrize(prize));\r\n  };\r\n\r\n  const onClickDelete = (e) => {\r\n    e.preventDefault();\r\n    Swal.fire({\r\n      icon: \"question\",\r\n      title: \"¿Confirma la eliminación del premio?\",\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: `Eliminar`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(deletePrize(prize));\r\n        Swal.fire(\"Saved!\", \"\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-sm-3 py-2 rounded\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body  p-2\">\r\n          <h5 className=\"card-title\">{prize.title}</h5>\r\n          <p className=\"card-text display-display-4\">{prize.description}</p>\r\n\r\n          <div className=\"flex-row justify-content-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success mr-1\"\r\n              onClick={onClickEdit}\r\n            >\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={onClickDelete}\r\n            >\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { PrizeCard } from \"./PrizeCard\";\r\n\r\n\r\n\r\n\r\n\r\nexport const PrizeCardList = ({ prizeList }) => {\r\n  \r\n  return (\r\n    <div className=\"row\">\r\n      {prizeList.map((prize) => (\r\n        <PrizeCard key={prize.tempId} prize={prize} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","export const initRafle = {\r\n  title: \"\",\r\n  description: \"\",\r\n  alias: \"\",\r\n  type: \"\",\r\n  listQuantity: 0,\r\n  ticketsPerList: 0,\r\n  pricePerTicket: 0,\r\n  drawDate: Date.now(),\r\n};\r\n\r\nexport const initPrize = {\r\n  title: \"\",\r\n  description: \"\",\r\n};\r\n\r\nexport const loginFormData = {\r\n  userName: \"\",\r\n  password: \"\",\r\n};\r\n","export const createRaffleValidator = (formData, prizes) => {\r\n  let messages = [];\r\n  if (formData.title === \"\") {\r\n    messages.push(\"Debe ingresar Título\");\r\n  }\r\n  if (formData.description === \"\") {\r\n    messages.push(\"Debe ingresar Descripción\");\r\n  }\r\n  if (formData.alias === \"\") {\r\n    messages.push(\"Debe ingresar Título\");\r\n  }\r\n  if (formData.type === \"\") {\r\n    messages.push(\"Debe ingresar Tipo\");\r\n  }\r\n\r\n  if (formData.drawDate === \"\" || formData.drawDate === null) {\r\n    messages.push(\"Debe ingresar Fecha del Sorteo\");\r\n  }\r\n\r\n  if (formData.drawDate < Date.now()) {\r\n    messages.push(\"Fecha del Sorteo debe ser mayor a la actual\");\r\n  }\r\n\r\n  if (formData.type === \"colaborative\" && formData.listQuantity === 0) {\r\n    messages.push(\"Debe ingresar Número de Listas\");\r\n  }\r\n\r\n  if (formData.ticketsPerList === 0) {\r\n    messages.push(\"Debe ingresar Tickets por Lista\");\r\n  }\r\n\r\n  if (formData.pricePerTicket === 0) {\r\n    messages.push(\"Debe ingresar Valor por Ticket\");\r\n  }\r\n\r\n  if (prizes.length === 0) {\r\n    messages.push(\"Debe ingresar los Premios\");\r\n  }\r\n  return {\r\n    status: messages.length === 0,\r\n    messages,\r\n  };\r\n};\r\n\r\nexport const prizeFormValidator = (prize) => {\r\n  let messages = [];\r\n  if (!prize.title) {\r\n    messages.push(\"Debe ingresar Título\");\r\n  }\r\n  if (!prize.description) {\r\n    messages.push(\"Debe ingresar Descripción\");\r\n  }\r\n  return {\r\n    status: messages.length === 0,\r\n    messages,\r\n  };\r\n};\r\n\r\nexport const addListValidator = (formData) => {\r\n  let messages = [];\r\n  if (formData.listQuantity < 1) {\r\n    messages.push(\"La cantidad a ingresar debe ser al menos 1\");\r\n  }\r\n\r\n  return {\r\n    status: messages.length === 0,\r\n    messages,\r\n  };\r\n};\r\n\r\nexport const addTicketsValidator = (formData) => {\r\n  let messages = [];\r\n  if (formData.ticketsPerList < 1) {\r\n    messages.push(\"La cantidad a ingresar debe ser al menos 1\");\r\n  }\r\n\r\n  return {\r\n    status: messages.length === 0,\r\n    messages,\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  addPrize,\r\n  cleanPrize,\r\n  editPrize,\r\n} from \"../../actions/createRaffle.action\";\r\nimport { initPrize } from \"../../common/defaultData\";\r\nimport { formatValidationMessages } from \"../../helpers/validation.helper\";\r\nimport { prizeFormValidator } from \"../../validators/createRaffle.validator\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const PrizeForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { activePrize } = useSelector((state) => state.createRaffle);\r\n\r\n  const [formData, setFormData] = useState(initPrize);\r\n\r\n  useEffect(() => {\r\n    if (activePrize) {\r\n      setFormData(activePrize);\r\n    } else {\r\n      setFormData(initPrize);\r\n    }\r\n  }, [activePrize, setFormData]);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const onHandleAddPrize = (e) => {\r\n    e.preventDefault();\r\n\r\n    const validation = prizeFormValidator(formData);\r\n\r\n    if (validation.status) {\r\n      if (activePrize) {\r\n        dispatch(\r\n          editPrize({\r\n            tempId: activePrize.tempId,\r\n            ...formData,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(addPrize({ ...formData, tempId: uuidv4() }));\r\n      }\r\n\r\n      dispatch(cleanPrize());\r\n      setFormData(initPrize);\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores de validación en el formulario de Premios:\",\r\n        html: formatValidationMessages(validation.messages),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Premios</h2>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group col-md-4\">\r\n          <input\r\n            name=\"title\"\r\n            value={formData.title}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            placeholder=\"Título\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-4\">\r\n          <input\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            placeholder=\"Descripción\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-4\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success my-auto\"\r\n            onClick={onHandleAddPrize}\r\n          >\r\n            <FontAwesomeIcon icon={faPlus} className=\"fa-lg mr-2\" />\r\n            Agregar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { PrizeCardList } from \"../../components/ui/PrizeCardList\";\r\nimport { PrizeForm } from \"../../components/ui/PrizeForm\";\r\nimport { initRafle } from \"../../common/defaultData\";\r\nimport { createRaffleValidator } from \"../../validators/createRaffle.validator\";\r\nimport { formatValidationMessages } from \"../../helpers/validation.helper\";\r\nimport {\r\n  cleanAll,\r\n  setRaffleData,\r\n  startCreateRaffle,\r\n} from \"../../actions/createRaffle.action\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const CreateRaffle = () => {\r\n  const [formData, setFormData] = useState(initRafle);\r\n  const { prizeList, flagSaved } = useSelector((state) => state.createRaffle);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleChange = ({ target }) => {\r\n    const newState = {\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    };\r\n\r\n    setFormData(newState);\r\n    dispatch(setRaffleData(newState));\r\n  };\r\n\r\n  const handleTypeChange = ({ target }) => {\r\n    console.log(\"type\", target.value);\r\n    const newState = {\r\n      ...formData,\r\n      listQuantity: target.value === \"simple\" ? \"1\" : \"0\",\r\n      [target.name]: target.value,\r\n    };\r\n\r\n    setFormData(newState);\r\n    dispatch(setRaffleData(newState));\r\n  };\r\n\r\n  const onHandleDrawDateChange = (date) => {\r\n    const newState = {\r\n      ...formData,\r\n      drawDate: date,\r\n    };\r\n    setFormData(newState);\r\n    dispatch(setRaffleData(newState));\r\n  };\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validation = createRaffleValidator(formData, prizeList);\r\n    if (validation.status) {\r\n      dispatch(startCreateRaffle());\r\n\r\n      if (flagSaved) {\r\n        dispatch(cleanAll());\r\n        history.push(\"/\");\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores de validación en el formulario:\",\r\n        html: formatValidationMessages(validation.messages),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Crear Rifa</h1>\r\n      <form onSubmit={onHandleSubmit}>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"title\" className=\"font-weight-bold\">\r\n              Título\r\n            </label>\r\n            <input\r\n              name=\"title\"\r\n              value={formData.title}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              placeholder=\"Título\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-8\">\r\n            <label htmlFor=\"inputPassword4\" className=\"font-weight-bold\">\r\n              Descripción\r\n            </label>\r\n            <input\r\n              name=\"description\"\r\n              value={formData.description}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              placeholder=\"Descripción\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"alias\" className=\"font-weight-bold\">\r\n              Alias\r\n            </label>\r\n            <input\r\n              name=\"alias\"\r\n              value={formData.alias}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"alias\"\r\n              placeholder=\"alias\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"type\" className=\"font-weight-bold\">\r\n              Tipo\r\n            </label>\r\n            <select\r\n              name=\"type\"\r\n              value={formData.type}\r\n              onChange={handleTypeChange}\r\n              id=\"type\"\r\n              className=\"form-control\"\r\n            >\r\n              <option>Seleccionar Tipo</option>\r\n              <option value=\"simple\">Simple</option>\r\n              <option value=\"colaborative\">Colaborativa</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"drawDate\" className=\"font-weight-bold\">\r\n              Fecha del Sorteo\r\n            </label>\r\n            <br />\r\n            <DatePicker\r\n              name=\"title\"\r\n              selected={formData.drawDate}\r\n              id=\"drawDate\"\r\n              className=\"form-control\"\r\n              placeholder=\"Fecha del Sorteo\"\r\n              onChange={(date) => onHandleDrawDateChange(date)}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          {formData.type === \"colaborative\" && (\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"listQuantity\" className=\"font-weight-bold\">\r\n                Número de Listas\r\n              </label>\r\n              <input\r\n                name=\"listQuantity\"\r\n                value={formData.listQuantity}\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"listQuantity\"\r\n                placeholder=\"Número de Listas\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {(formData.type === \"colaborative\" || formData.type === \"simple\") && (\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"ticketsPerList\" className=\"font-weight-bold\">\r\n                Tickets por Lista\r\n              </label>\r\n              <input\r\n                name=\"ticketsPerList\"\r\n                value={formData.ticketsPerList}\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"ticketsPerList\"\r\n                placeholder=\"Tickets por Lista\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"pricePerTicket\" className=\"font-weight-bold\">\r\n              Valor por Ticket\r\n            </label>\r\n            <input\r\n              name=\"pricePerTicket\"\r\n              value={formData.pricePerTicket}\r\n              onChange={handleChange}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"pricePerTicket\"\r\n              placeholder=\"Valor por Ticket\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12 bg-light\">\r\n          <PrizeForm />\r\n          <PrizeCardList prizeList={prizeList} />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Crear Rifa\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const Dashboard = () => {\r\n    return (\r\n        <h1>Dashboard</h1>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\nimport {\r\n  deletePrizeService,\r\n  getPrizesService,\r\n  getRaffleDataService,\r\n  updatePrizeService,\r\n  updateRaffleDataService,\r\n  addPrizeService,\r\n  getRaffleListsService,\r\n  assignListToUserService,\r\n  addListsToRaffleService,\r\n  addTicketsToRaffleService,\r\n} from \"../services/rafflesApi.service\";\r\nimport Swal from \"sweetalert2\";\r\nimport { format } from \"date-fns\";\r\nimport { formatValidationMessagesFromApi } from \"../helpers/validation.helper\";\r\n\r\nexport const startGetRaffleData = (alias) => {\r\n  return async (dispatch) => {\r\n    const data = await getRaffleDataService(alias);\r\n\r\n    if (data.ok) {\r\n      dispatch(getRaffleData(data.raffle));\r\n    } else {\r\n      dispatch(getRaffleData({}));\r\n\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores al crear la Rifa:\",\r\n        html: formatValidationMessagesFromApi(data.errors),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const startSaveRaffleData = (raffleData) => {\r\n  return async (dispatch) => {\r\n    const { _id, title, description, drawDate } = raffleData;\r\n\r\n    const data = await updateRaffleDataService(_id, {\r\n      title,\r\n      description,\r\n      drawDate: format(new Date(drawDate), \"yyyy-MM-dd\"),\r\n    });\r\n\r\n    if (data.ok) {\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        text: \"Los datos de la Rifa han sido actualizados con éxito\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        text: \"Errores al actualizar los datos de la Rifa\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const startGetPrizes = (alias) => {\r\n  return async (dispatch) => {\r\n    const data = await getPrizesService(alias);\r\n\r\n    if (data.ok) {\r\n      dispatch(getPrizes(data.prizes));\r\n    } else {\r\n      dispatch(getPrizes([]));\r\n    }\r\n  };\r\n};\r\n\r\nexport const startDeletePrize = (prizeId) => {\r\n  return async (dispatch) => {\r\n    const data = await deletePrizeService(prizeId);\r\n\r\n    if (data.ok) {\r\n      dispatch(deletePrize(prizeId));\r\n\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        text: \"El premio ha sido eliminado con éxito\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    } else {\r\n      dispatch(deletePrize(null));\r\n\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores al eliminar el premio:\",\r\n        html: formatValidationMessagesFromApi(data.errors),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const startAddPrize = (prize) => {\r\n  return async (dispatch, getState) => {\r\n    \r\n    const { raffleData } = getState().editRaffle;\r\n\r\n    const data = await addPrizeService(raffleData._id, prize);\r\n\r\n    if (data.ok) {\r\n      dispatch(addPrize(data.prize));\r\n\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        text: \"El premio ha sido agregado con éxito\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    } else {\r\n      dispatch(deletePrize(null));\r\n\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores al agregar el premio:\",\r\n        html: formatValidationMessagesFromApi(data.errors),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const startUpdatePrize = (prize) => {\r\n  return async (dispatch) => {\r\n    const data = await updatePrizeService(prize);\r\n\r\n    if (data.ok) {\r\n      dispatch(updatePrize(prize));\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        text: \"El premio ha sido modificado con éxito\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores al eliminar el premio:\",\r\n        html: formatValidationMessagesFromApi(data.errors),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const startAssignRaffleList = (raffleListId, user) => {\r\n  return async (dispatch) => {\r\n    const data = await assignListToUserService(raffleListId, user);\r\n\r\n    if (data.ok) {\r\n      dispatch(assignRaffleList(data.raffleList));\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        text: \"La lista ha sido asignada exitosamente\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores al asignar la lista:\",\r\n        html: formatValidationMessagesFromApi(data.errors),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const startGetRaffleLists = (alias) => {\r\n  return async (dispatch) => {\r\n    const data = await getRaffleListsService(alias);\r\n\r\n    if (data.ok) {\r\n      dispatch(getRaffleLists(data.rafleLists));\r\n    } else {\r\n      dispatch(getRaffleLists([]));\r\n    }\r\n  };\r\n};\r\n\r\nexport const startAddLists = (formData) => {\r\n  return async (dispatch, getState) => {\r\n    const { raffleData } = getState().editRaffle;\r\n\r\n    const data = await addListsToRaffleService(raffleData._id, formData);\r\n\r\n    if (data.ok) {\r\n      dispatch(addLists(data.raffleLists));\r\n      dispatch(updateListQuantity(data.raffle.listQuantity));\r\n\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        text: \"Se han añadido correctamente las listas\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores al agregar Listas:\",\r\n        html: formatValidationMessagesFromApi(data.errors),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const startAddTickets = (formData)=>{\r\n\r\n  return async (dispatch, getState) => {\r\n    const { raffleData } = getState().editRaffle;\r\n\r\n    const data = await addTicketsToRaffleService(raffleData._id, formData);\r\n\r\n    if (data.ok) {      \r\n\r\n      dispatch(addTickets(data.raffle));\r\n\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        text: \"Se han añadido correctamente los tickets\",\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores al agregar los tickets:\",\r\n        html: formatValidationMessagesFromApi(data.errors),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n\r\n}\r\n\r\nexport const selectPrize = (prize) => ({\r\n  type: types.editRaffleSelectPrize,\r\n  payload: prize,\r\n});\r\n\r\nexport const assignRaffleList = (raffleList) => ({\r\n  type: types.editRaffleAssignList,\r\n  payload: raffleList,\r\n});\r\n\r\nexport const deletePrize = (prizeId) => ({\r\n  type: types.editRaffleDeletePrize,\r\n  payload: prizeId,\r\n});\r\n\r\nconst getRaffleData = (raffleData) => ({\r\n  type: types.editRaffleGetData,\r\n  payload: raffleData,\r\n});\r\n\r\nconst getPrizes = (prizes) => ({\r\n  type: types.editRaffleGetPrizes,\r\n  payload: prizes,\r\n});\r\n\r\nconst updatePrize = (prize) => ({\r\n  type: types.editRaffleUpdatePrize,\r\n  payload: prize,\r\n});\r\n\r\nconst addPrize = (prize) => ({\r\n  type: types.editRaffleAddPrize,\r\n  payload: prize,\r\n});\r\n\r\nconst getRaffleLists = (raffleLists) => ({\r\n  type: types.editRaffleGetRaffleLists,\r\n  payload: raffleLists,\r\n});\r\n\r\nconst addLists = (raffleLists) => ({\r\n  type: types.editRaffleAddLists,\r\n  payload: raffleLists,\r\n});\r\n\r\nconst addTickets = (raffleData) => ({\r\n  type: types.editRaffleAddTickets,\r\n  payload: raffleData,\r\n});\r\n\r\nconst updateListQuantity = (listQuantity) => ({\r\n  type: types.editRaffleUpdateListQuantity,\r\n  payload: listQuantity,\r\n});\r\n\r\nexport const cleanRaffleData = () => ({\r\n  type: types.editRaffleCleanData,\r\n});\r\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { selectPrize, startDeletePrize } from \"../../actions/editRaffle.action\";\r\n\r\nexport const EditPrizeCard = ({ prize }) => {\r\n  const dispatch = useDispatch();\r\n  const { prizes } = useSelector((state) => state.editRaffle);\r\n\r\n  const onClickEdit = () => {\r\n    dispatch(selectPrize(prize));\r\n  };\r\n\r\n  const onClickDelete = () => {\r\n    Swal.fire({\r\n      title: `¿Desea eliminar el premio ${prize.title}?`,\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: `Si, eliminar`,\r\n      cancelButtonText: `No`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(startDeletePrize(prize._id));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-sm-3 py-2\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body p-2\">\r\n          <h5 className=\"card-title\">{prize.title}</h5>\r\n          <p className=\"card-text display-display-4\">{prize.description}</p>\r\n\r\n          <div className=\"flex-row justify-content-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success mr-1\"\r\n              onClick={onClickEdit}\r\n            >\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </button>\r\n\r\n            {prizes.length > 1  && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                onClick={onClickDelete}\r\n              >\r\n                <FontAwesomeIcon icon={faTrashAlt} />\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { EditPrizeCard } from \"./EditPrizeCard\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const EditPrizeCardList = () => {\r\n  const { prizes } = useSelector((state) => state.editRaffle);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {prizes.map((prize) => (\r\n        <EditPrizeCard key={prize._id} prize={prize} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  startAddPrize,\r\n  startUpdatePrize,\r\n} from \"../../actions/editRaffle.action\";\r\n\r\nimport { initPrize } from \"../../common/defaultData\";\r\nimport { formatValidationMessages } from \"../../helpers/validation.helper\";\r\nimport { prizeFormValidator } from \"../../validators/createRaffle.validator\";\r\n\r\nexport const EditPrizeForm = () => {\r\n  const [formData, setFormData] = useState(initPrize);\r\n  const { selectedPrize } = useSelector((state) => state.editRaffle);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log(\"efecto\", selectedPrize);\r\n    if (selectedPrize) {\r\n      setFormData(selectedPrize);\r\n    } else {\r\n      setFormData(initPrize);\r\n    }\r\n  }, [selectedPrize]);\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleSavePrize = () => {\r\n    const validation = prizeFormValidator(formData);    \r\n\r\n    if (!validation.status) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores de validación en el formulario de Premios:\",\r\n        html: formatValidationMessages(validation.messages),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    Swal.fire({\r\n      title: `¿Desea guardar el premio?`,\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: `Si, agregar`,\r\n      cancelButtonText: `No`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        if (formData._id) {\r\n          dispatch(startUpdatePrize(formData));\r\n        } else {\r\n          dispatch(startAddPrize(formData));\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-row\">\r\n      <div className=\"form-group col-md-4\">\r\n        <input\r\n          name=\"title\"\r\n          value={formData.title}\r\n          onChange={handleInputChange}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"title\"\r\n          placeholder=\"Título\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group col-md-4\">\r\n        <input\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleInputChange}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"title\"\r\n          placeholder=\"Descripción\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group col-md-4\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success my-auto\"\r\n          onClick={handleSavePrize}\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} className=\"fa-lg mr-2\" />\r\n\r\n          {formData._id ? \"Modificar\" : \"Agregar\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { EditPrizeCardList } from \"./EditPrizeCardList\";\r\nimport { EditPrizeForm } from \"./EditPrizeForm\";\r\n\r\nexport const EditPrizesForm = () => {\r\n  return (\r\n    <>\r\n      <EditPrizeForm />\r\n      <EditPrizeCardList />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react/cjs/react.development\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  cleanRaffleData,\r\n  startSaveRaffleData,\r\n} from \"../../actions/editRaffle.action\";\r\nimport { initRafle } from \"../../common/defaultData\";\r\nimport { formatValidationMessages } from \"../../helpers/validation.helper\";\r\n\r\nimport { editRaffleValidator } from \"../../validators/editRaffle.validator\";\r\n\r\nexport const EditRaffleForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { raffleData } = useSelector((state) => state.editRaffle);\r\n  const [formData, setFormData] = useState(raffleData);\r\n\r\n  useEffect(() => {\r\n    if (raffleData) {\r\n      setFormData(raffleData);\r\n    } else {\r\n      setFormData(initRafle);\r\n    }\r\n  }, [raffleData]);\r\n\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     dispatch(cleanRaffleData());\r\n  //   };\r\n  // }, [dispatch]);\r\n\r\n  const handleChange = ({ target }) => {\r\n    const newState = {\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    };\r\n\r\n    setFormData(newState);\r\n  };\r\n\r\n  const onHandleDrawDateChange = (date) => {\r\n    const newState = {\r\n      ...formData,\r\n      drawDate: date,\r\n    };\r\n    setFormData(newState);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validation = editRaffleValidator(formData);\r\n    if (validation.status) {\r\n      dispatch(startSaveRaffleData(formData));\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores de validación en el formulario:\",\r\n        html: formatValidationMessages(validation.messages),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"title\" className=\"font-weight-bold\">\r\n              Título\r\n            </label>\r\n            <input\r\n              name=\"title\"\r\n              value={formData.title}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              placeholder=\"Título\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-8\">\r\n            <label htmlFor=\"inputPassword4\" className=\"font-weight-bold\">\r\n              Descripción\r\n            </label>\r\n            <input\r\n              name=\"description\"\r\n              value={formData.description}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              placeholder=\"Descripción\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"alias\" className=\"font-weight-bold\">\r\n              Alias\r\n            </label>\r\n            <input\r\n              name=\"alias\"\r\n              defaultValue={formData.alias}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              className=\"form-control\"\r\n              id=\"alias\"\r\n              placeholder=\"alias\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"type\" className=\"font-weight-bold\">\r\n              Tipo\r\n            </label>\r\n\r\n            <input\r\n              name=\"type\"\r\n              defaultValue={formData.type}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              className=\"form-control\"\r\n              id=\"type\"\r\n              placeholder=\"type\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"drawDate\" className=\"font-weight-bold\">\r\n              Fecha del Sorteo\r\n            </label>\r\n            <br />\r\n            <DatePicker\r\n              name=\"title\"\r\n              selected={\r\n                formData.drawDate === undefined || formData.drawDate === null\r\n                  ? Date.now()\r\n                  : new Date(formData.drawDate)\r\n              }\r\n              id=\"drawDate\"\r\n              className=\"form-control\"\r\n              placeholder=\"Fecha del Sorteo\"\r\n              onChange={(date) => onHandleDrawDateChange(date)}\r\n              dateFormat=\"dd/MM/yyyy\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          {formData.type === \"colaborative\" && (\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"listQuantity\" className=\"font-weight-bold\">\r\n                Número de Listas\r\n              </label>\r\n              <input\r\n                readOnly={true}\r\n                name=\"listQuantity\"\r\n                defaultValue={formData.listQuantity}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"listQuantity\"\r\n                placeholder=\"Número de Listas\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {(formData.type === \"colaborative\" || formData.type === \"simple\") && (\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"ticketsPerList\" className=\"font-weight-bold\">\r\n                Tickets por Lista\r\n              </label>\r\n              <input\r\n                readOnly={true}\r\n                name=\"ticketsPerList\"\r\n                defaultValue={formData.ticketsPerList}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"ticketsPerList\"\r\n                placeholder=\"Tickets por Lista\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-group col-md-4\">\r\n            <label htmlFor=\"pricePerTicket\" className=\"font-weight-bold\">\r\n              Valor por Ticket\r\n            </label>\r\n            <input\r\n              readOnly={true}\r\n              name=\"pricePerTicket\"\r\n              defaultValue={formData.pricePerTicket}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"pricePerTicket\"\r\n              placeholder=\"Valor por Ticket\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Modificar Datos de la Rifa\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","export const editRaffleValidator = (formData) => {\r\n  let messages = [];\r\n  if (formData.title === \"\") {\r\n    messages.push(\"Debe ingresar Título\");\r\n  }\r\n  if (formData.description === \"\") {\r\n    messages.push(\"Debe ingresar Descripción\");\r\n  }\r\n\r\n  if (formData.drawDate === \"\" || formData.drawDate === null) {\r\n    messages.push(\"Debe ingresar Fecha del Sorteo\");\r\n  }\r\n\r\n  if (formData.drawDate < Date.now()) {\r\n    messages.push(\"Fecha del Sorteo debe ser mayor a la actual\");\r\n  }\r\n\r\n  if (formData.drawDate < Date.now()) {\r\n    messages.push(\"Fecha del Sorteo debe ser mayor a la actual\");\r\n  }\r\n\r\n  return {\r\n    status: messages.length === 0,\r\n    messages,\r\n  };\r\n};\r\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startAddLists } from \"../../actions/editRaffle.action\";\r\nimport { formatValidationMessages } from \"../../helpers/validation.helper\";\r\nimport { addListValidator } from \"../../validators/createRaffle.validator\";\r\n\r\nexport const AddListsColaborativeRaffle = () => {\r\n  const [formData, setFormData] = useState({\r\n    listQuantity: 0,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onQuantityChange = ({ target }) => {\r\n    setFormData({\r\n      listQuantity: target.value,\r\n    });\r\n  };\r\n\r\n  const onClickButton = () => {\r\n    const validation = addListValidator(formData);\r\n\r\n    if (!validation.status) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores de validación al agregar listas:\",\r\n        html: formatValidationMessages(validation.messages),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    Swal.fire({\r\n      title: `¿Desea agregar los tickets?`,\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: `Si, agregar`,\r\n      cancelButtonText: `No`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(startAddLists(formData));\r\n        setFormData({\r\n          listQuantity: 0,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Agregar listas:</h2>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group col-md-4\">\r\n          <input\r\n            name=\"quantity\"\r\n            value={formData.listQuantity}\r\n            onChange={onQuantityChange}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"quantity\"\r\n            placeholder=\"Cantidad\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-4\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success my-auto\"\r\n            onClick={onClickButton}\r\n          >\r\n            <FontAwesomeIcon icon={faPlus} className=\"fa-lg mr-2\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startAddTickets } from \"../../actions/editRaffle.action\";\r\nimport { formatValidationMessages } from \"../../helpers/validation.helper\";\r\nimport { addTicketsValidator } from \"../../validators/createRaffle.validator\";\r\n\r\nexport const AddTicketsSimpleRaffle = () => {\r\n  const [formData, setFormData] = useState({\r\n    ticketsPerList: 0,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onQuantityChange = ({ target }) => {\r\n    setFormData({\r\n      ticketsPerList: target.value,\r\n    });\r\n  };\r\n\r\n  const onClickButton = () => {\r\n    const validation = addTicketsValidator(formData);\r\n\r\n    if (!validation.status) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores de validación al agregar tickets:\",\r\n        html: formatValidationMessages(validation.messages),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    Swal.fire({\r\n      title: `¿Desea agregar los tickets?`,\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: `Si, agregar`,\r\n      cancelButtonText: `No`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(startAddTickets(formData));\r\n        setFormData({\r\n          ticketsPerList: 0,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Agregar Tickets:</h2>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group col-md-4\">\r\n          <input\r\n            name=\"quantity\"\r\n            value={formData.ticketsPerList}\r\n            onChange={onQuantityChange}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"quantity\"\r\n            placeholder=\"Cantidad\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-4\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success my-auto\"\r\n            onClick={onClickButton}\r\n          >\r\n            <FontAwesomeIcon icon={faPlus} className=\"fa-lg mr-2\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AddListsColaborativeRaffle } from \"./AddListsColaborativeRaffle\";\r\nimport { AddTicketsSimpleRaffle } from \"./AddTicketsSimpleRaffle\";\r\n\r\nexport const OtherActionsForm = () => {\r\n  const { raffleData } = useSelector((state) => state.editRaffle);\r\n  return (\r\n    <>\r\n      {raffleData.type === \"colaborative\" && <AddListsColaborativeRaffle />}\r\n      {raffleData.type === \"simple\" && <AddTicketsSimpleRaffle />}\r\n    </>\r\n  );\r\n};\r\n","/*\r\n  1. available\r\n  2. assigned\r\n  3. done\r\n   */\r\n\r\nexport const raffleStatusHelper = (id) => {\r\n  switch (id) {\r\n    case 1:\r\n      return \"disponible\";\r\n\r\n    case 2:\r\n      return \"asignada\";\r\n\r\n    case 3:\r\n      return \"completada\";\r\n\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n","import { faAngleDoubleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startAssignRaffleList } from \"../../actions/editRaffle.action\";\r\nimport { raffleStatusHelper } from \"../../common/statusHelper\";\r\n\r\nexport const RaffleListsAdminRow = ({ list }) => {\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAssign = () => {   \r\n    Swal.fire({\r\n      title: `¿Desea asignar la lista ${list.listNumber} a ${userName} ?`,\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: `Si, asignar`,\r\n      cancelButtonText: `No`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(startAssignRaffleList(list._id, { userName }));\r\n      }\r\n    });\r\n  };\r\n\r\n  const handChange = ({ target }) => {\r\n    setUserName(target.value);\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>{list.listNumber}</td>\r\n      <td>{raffleStatusHelper(list.status)}</td>\r\n      <td>\r\n        {list.userId && list.userId.userName}\r\n\r\n        {list.status === 1 && (\r\n          <input\r\n            name=\"userName\"\r\n            value={userName}\r\n            onChange={handChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"userName\"\r\n            placeholder=\"Usuario\"\r\n          />\r\n        )}\r\n      </td>\r\n      <td>\r\n        {list.status === 1 && (\r\n          <button\r\n            className=\"btn btn-outline-success\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            title=\"Tooltip on top\"\r\n            onClick={handleAssign}\r\n          >\r\n            <FontAwesomeIcon icon={faAngleDoubleRight} />\r\n          </button>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { RaffleListsAdminRow } from \"./RaffleListsAdminRow\";\r\n\r\nexport const RaffleListsAdmin = () => {\r\n  const { raffleLists } = useSelector((state) => state.editRaffle);\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Número de Lista</th>\r\n          <th scope=\"col\">Estado</th>\r\n          <th scope=\"col\">Asignada a:</th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {raffleLists.map((list) => (\r\n          <RaffleListsAdminRow key={list._id} list={list} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  cleanRaffleData,\r\n  startGetPrizes,\r\n  startGetRaffleData,\r\n  startGetRaffleLists,\r\n} from \"../../actions/editRaffle.action\";\r\nimport { EditPrizesForm } from \"../../components/ui/EditPrizesForm\";\r\nimport { EditRaffleForm } from \"../../components/ui/EditRaffleForm\";\r\nimport { OtherActionsForm } from \"../../components/ui/OtherActionsForm\";\r\nimport { RaffleListsAdmin } from \"../../components/ui/RaffleListsAdmin\";\r\n\r\nexport const EditRaffle = (props) => {\r\n  const { alias } = props.match.params;\r\n\r\n  const { raffleData } = useSelector((state) => state.editRaffle);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(startGetRaffleData(alias));\r\n    \r\n    dispatch(startGetPrizes(alias));\r\n    if (raffleData.type === \"colaborative\") {\r\n      dispatch(startGetRaffleLists(alias));\r\n    }\r\n    \r\n  }, [alias, raffleData.type, dispatch]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n     dispatch(cleanRaffleData());\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Modificar Rifa</h1>\r\n\r\n      <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className=\"nav-link active\"\r\n            id=\"mainData-tab\"\r\n            data-toggle=\"tab\"\r\n            href=\"#mainData\"\r\n            role=\"tab\"\r\n            aria-controls=\"mainData\"\r\n            aria-selected=\"true\"\r\n          >\r\n            Datos Principales\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className=\"nav-link\"\r\n            id=\"profile-tab\"\r\n            data-toggle=\"tab\"\r\n            href=\"#profile\"\r\n            role=\"tab\"\r\n            aria-controls=\"profile\"\r\n            aria-selected=\"false\"\r\n          >\r\n            Modificar Premios\r\n          </a>\r\n        </li>\r\n\r\n        {raffleData.type === \"colaborative\" && (\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className=\"nav-link\"\r\n              id=\"raffleLists-tab\"\r\n              data-toggle=\"tab\"\r\n              href=\"#raffleLists\"\r\n              role=\"tab\"\r\n              aria-controls=\"raffleLists\"\r\n              aria-selected=\"false\"\r\n            >\r\n              Listas\r\n            </a>\r\n          </li>\r\n        )}\r\n\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className=\"nav-link\"\r\n            id=\"contact-tab\"\r\n            data-toggle=\"tab\"\r\n            href=\"#contact\"\r\n            role=\"tab\"\r\n            aria-controls=\"contact\"\r\n            aria-selected=\"false\"\r\n          >\r\n            Otras Acciones\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\" id=\"myTabContent\">\r\n        <div\r\n          className=\"tab-pane fade show active m-5\"\r\n          id=\"mainData\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"home-tab\"\r\n        >\r\n          <EditRaffleForm />\r\n        </div>\r\n        <div\r\n          className=\"tab-pane fade  m-5\"\r\n          id=\"profile\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"profile-tab\"\r\n        >\r\n          <EditPrizesForm />\r\n        </div>\r\n\r\n        {raffleData.type === \"colaborative\" && (\r\n          <div\r\n            className=\"tab-pane fade  m-5\"\r\n            id=\"raffleLists\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"raffleLists-tab\"\r\n          >\r\n            <RaffleListsAdmin />\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className=\"tab-pane fade  m-5\"\r\n          id=\"contact\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"contact-tab\"\r\n        >\r\n          <OtherActionsForm />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const MyCollaborations = () => {\r\n    return (\r\n        <h1>Mis Colaboraciones</h1>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const MyParticipations = () => {\r\n    return (\r\n        <h1>Mis Participaciones</h1>\r\n    )\r\n}\r\n","import { getMyRaffles } from \"../services/rafflesApi.service\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startMyRafflesGetAll = () => {\r\n  return async (dispatch, getState) => {\r\n    const { userName } = getState().auth;\r\n    const { raffles } = await getMyRaffles(userName);\r\n\r\n    dispatch(myRaflessGetAll(raffles));\r\n  };\r\n};\r\n\r\nexport const myRaflessGetAll = (raffles) => ({\r\n  type: types.myRafflesGetAll,\r\n  payload: raffles,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { format } from \"date-fns\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faEye, faEdit, faDice } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { startMyRafflesGetAll } from \"../../actions/myRaffles.action\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const MyRaffles = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const myRaffles = useSelector((state) => state.myRaffles);\r\n\r\n  useEffect(() => {\r\n    dispatch(startMyRafflesGetAll());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Mis Rifas</h1>\r\n      <table className=\"table\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">Titulo</th>\r\n            <th scope=\"col\">Alias</th>\r\n            <th scope=\"col\">Tipo</th>\r\n            <th scope=\"col\">Fecha del Sorteo</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {myRaffles.map((raffle) => (\r\n            <tr key={raffle._id}>\r\n              <td>{raffle.title}</td>\r\n              <td>{raffle.alias}</td>\r\n              <td>{raffle.type}</td>\r\n              <td>{format(new Date(raffle.drawDate), \"yyyy-MM-dd\")}</td>\r\n              <td>\r\n                <NavLink\r\n                  to={`/raffle/${raffle.alias}`}\r\n                  className=\"btn btn-primary mx-2\"\r\n                >\r\n                  <FontAwesomeIcon icon={faEye} />\r\n                </NavLink>\r\n                <NavLink\r\n                  to={`/raffle/edit/${raffle.alias}`}\r\n                  className=\"btn btn-primary mx-2\"\r\n                >\r\n                  <FontAwesomeIcon icon={faEdit} />\r\n                </NavLink>\r\n                <NavLink to=\"/\" className=\"btn btn-primary mx-2\">\r\n                  <FontAwesomeIcon icon={faDice} />\r\n                </NavLink>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const Contact = () => {\r\n    return (\r\n        <h1>Contacto</h1>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <h1>Home</h1>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { loginFormData } from \"../../common/defaultData\";\r\nimport { createLoginFormValidator } from \"../../validators/login.validator\";\r\nimport Swal from \"sweetalert2\";\r\nimport { formatValidationMessages } from \"../../helpers/validation.helper\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogin } from \"../../actions/auth.action\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const Login = () => {\r\n  const { uid } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (uid || uid !== \"\") {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  }, [uid, history]);\r\n\r\n  const [values, handleInputChange] = useForm(loginFormData);\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const validation = createLoginFormValidator(values);\r\n\r\n    if (validation.status) {\r\n      dispatch(startLogin(values));\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Errores de validación en el formulario:\",\r\n        html: formatValidationMessages(validation.messages),\r\n        confirmButtonText: \"Aceptar\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 py-4\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            {false && (\r\n              <a href=\".\" className=\"float-right btn btn-outline-primary\">\r\n                Sign up\r\n              </a>\r\n            )}\r\n\r\n            <h4 className=\"card-title mb-4 mt-1\">Ingresar a la Aplicación</h4>\r\n            <form onSubmit={onHandleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>Nombre de Usuario</label>\r\n                <input\r\n                  name=\"userName\"\r\n                  value={values.userName}\r\n                  onChange={handleInputChange}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nombre de Usuario\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                {false && (\r\n                  <a className=\"float-right\" href=\".\">\r\n                    Forgot?\r\n                  </a>\r\n                )}\r\n                <label>Password</label>\r\n                <input\r\n                  name=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleInputChange}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                />\r\n              </div>\r\n              {false && (\r\n                <div className=\"form-group\">\r\n                  <div className=\"checkbox\">\r\n                    <label>\r\n                      {\" \"}\r\n                      <input type=\"checkbox\" /> Save password{\" \"}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                  <FontAwesomeIcon icon={faSignInAlt} className=\"fa-lg  mr-2\" />\r\n                  Login{\" \"}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( {initialState} );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","export const createLoginFormValidator = (formData = {}) => {\r\n  let messages = [];\r\n\r\n  if (formData.userName === \"\") {\r\n    messages.push(\"Debe ingresar Nombre de Usuario\");\r\n  }\r\n  if (formData.password === \"\") {\r\n    messages.push(\"Debe ingresar Password\");\r\n  }\r\n\r\n  return {\r\n    status: messages.length === 0,\r\n    messages,\r\n  };\r\n\r\n\r\n};\r\n","import { getPrizesService, getRaffleDataService, getRaffleListsService, getTicketsFromRaffleService } from \"../services/rafflesApi.service\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startGetRaffleData = (alias) => {\r\n  return async (dispatch) => {\r\n    const data = await getRaffleDataService(alias);\r\n\r\n    if (data.ok) {\r\n      dispatch(getRaffleData(data.raffle));\r\n    } else {\r\n      dispatch(getRaffleData(null));\r\n    }\r\n  };\r\n};\r\n\r\nexport const startGetPrizes = (alias) => {\r\n  return async (dispatch) => {\r\n    const data = await getPrizesService(alias);\r\n\r\n    if (data.ok) {\r\n      dispatch(getPrizes(data.prizes));\r\n    } else {\r\n      dispatch(getPrizes(null));\r\n    }\r\n  };\r\n};\r\n\r\nexport const startGetTickets = (alias) => {\r\n  return async (dispatch) => {\r\n    const data = await getTicketsFromRaffleService(alias);\r\n\r\n    if (data.ok) {\r\n      dispatch(getTickets(data.tickets));\r\n    } else {\r\n      dispatch(getTickets([]));\r\n    }\r\n  };\r\n};\r\n\r\nexport const startGeRaffleLists = (alias) => {\r\n  return async (dispatch) => {\r\n    const data = await getRaffleListsService(alias);\r\n    \r\n    if (data.ok) {\r\n      dispatch(getRaffleLists(data.rafleLists));\r\n    } else {\r\n      dispatch(getRaffleLists(null));\r\n    }\r\n  };\r\n};\r\n\r\nconst getRaffleData = (raffleData) => ({\r\n  type: types.viewRaffleGetMainData,\r\n  payload: raffleData,\r\n});\r\n\r\nconst getPrizes = (prizes) => ({\r\n  type: types.viewRaffleGetPrizes,\r\n  payload: prizes,\r\n});\r\n\r\nconst getTickets = (tickets) => ({\r\n  type: types.viewRaffleGetTickets,\r\n  payload: tickets,\r\n});\r\n\r\nconst getRaffleLists = (raffleLists) => ({\r\n  type: types.viewRaffleGetRaffleLists,\r\n  payload: raffleLists,\r\n});\r\n\r\nexport const cleanData = () => ({\r\n  type: types.viewRaffleCleanData, \r\n});\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport const RaffleMainData = ({ source, listNumber }) => {\r\n  const { raffleData } = useSelector((state) =>\r\n    source === \"Raffle.js\" ? state.viewRaffle : state.viewRaffleList\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"d-flex justify-content-center\">{raffleData.title}</h2>\r\n          {listNumber && (\r\n            <h2 className=\"d-flex justify-content-center\">Lista N°: {listNumber}</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <h3 className=\"d-flex justify-content-center\">\r\n            {/* Sorteo: {format(new Date(raffleData.drawDate), \"dd-MM-yyyy\")} */}\r\n          </h3>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <h3 className=\"d-flex justify-content-center\">\r\n            Valor: ${raffleData.pricePerTicket}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <p>{raffleData.description}</p>\r\n    </>\r\n  );\r\n};\r\n","import { faCartPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startAddTicket } from \"../../actions/cart.action\";\r\n\r\nexport const TicketCard = ({ ticket }) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const { raffleListData } = useSelector((state) => state.viewRaffleList);\r\n  const { uid } = useSelector((state) => state.auth);\r\n\r\n  const handleClick = () => {\r\n    if (uid) {\r\n      dispatch(startAddTicket(ticket));\r\n      return;\r\n    }\r\n\r\n    Swal.fire({\r\n      title: `Para comprar su(s) ticket(s) debes estár logeado`,\r\n      text: \"¿Desea ir al login?\",\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonText: `Si, ir al login`,\r\n      cancelButtonText: `No`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-3 py-2\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body p-2\">\r\n          <h5 className=\"card-title\">\r\n            {raffleListData.listNumber\r\n              ? `Lista ${raffleListData.listNumber} - Ticket: ${ticket.sequenceNumber}`\r\n              : `Ticket: ${ticket.sequenceNumber}`}\r\n          </h5>\r\n          <p className=\"card-text\">\r\n            {ticket.status === 1 && \"Disponible\"}\r\n            {ticket.status === 2 && \"Reservado\"}\r\n            {ticket.status === 3 && \"Vendido\"}\r\n          </p>\r\n        </div>\r\n        <div className=\"card-footer d-flex display-item justify-content-center\">\r\n          {ticket.status === 1 && (\r\n            <button className=\"btn btn-success\" onClick={handleClick}>\r\n              <FontAwesomeIcon icon={faCartPlus} />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { TicketCard } from \"./TicketCard\";\r\n\r\nexport const TicketCardList = ({ source }) => {\r\n  const { tickets } = useSelector((state) =>\r\n    source === \"Raffle.js\" ? state.viewRaffle : state.viewRaffleList\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h3>Tickets:</h3>\r\n      <div className=\"row\">\r\n        {tickets.map((ticket) => (\r\n          <TicketCard key={ticket._id} ticket={ticket} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ViewPrizeCard = ({ prize }) => {\r\n  return (\r\n    <div className=\"col-3 py-2\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body p-2\">\r\n          <h5 className=\"card-title\">{prize.title}</h5>\r\n          <p className=\"card-text display-display-4\">{prize.description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ViewPrizeCard } from \"./ViewPrizeCard\";\r\n\r\nexport const ViewPrizeCardList = ({ source }) => {\r\n  const { prizes } = useSelector((state) =>\r\n    source === \"Raffle.js\" ? state.viewRaffle : state.viewRaffleList\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h3>Premios:</h3>\r\n      <div className=\"row\">\r\n        {prizes.map((prize) => (\r\n          <ViewPrizeCard key={prize._id} prize={prize} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const ViewRaffleListCard = ({ raffleList }) => {\r\n  const { raffleData } = useSelector((state) => state.viewRaffle);\r\n\r\n  return (\r\n    <div className=\"col-2\">\r\n      <div className=\"card mb-2\">\r\n        <div className=\"card-body p-2\">\r\n          <h5 className=\"card-title d-flex display-item justify-content-center\">\r\n            Nro: {raffleList.listNumber}\r\n          </h5>\r\n          <div className=\"d-flex display-item justify-content-center\">\r\n            <NavLink\r\n              className=\"btn btn-success text-light\"\r\n              to={`/raffle/${raffleData.alias}/list/${raffleList.listNumber}`}\r\n            >\r\n              <FontAwesomeIcon icon={faChevronRight} />\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ViewRaffleListCard } from \"./ViewRaffleListCard\";\r\n\r\nexport const ViewRaffleList = () => {\r\n  const { raffleLists } = useSelector((state) => state.viewRaffle);\r\n\r\n  return (\r\n    <>\r\n      <h3>Listas</h3>\r\n      <div className=\"row\">\r\n        {raffleLists.map((raffleList) => (\r\n          <ViewRaffleListCard key={raffleList._id} raffleList={raffleList} />\r\n        ))}\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  cleanData,\r\n  startGeRaffleLists,\r\n  startGetPrizes,\r\n  startGetRaffleData,\r\n  startGetTickets,\r\n} from \"../../actions/viewRaffle.action\";\r\nimport { RaffleMainData } from \"../../components/ui/RaffleMainData\";\r\nimport { TicketCardList } from \"../../components/ui/TicketCardList\";\r\nimport { ViewPrizeCardList } from \"../../components/ui/ViewPrizeCardList\";\r\nimport { ViewRaffleList } from \"../../components/ui/ViewRaffleList\";\r\n\r\nexport const Raffle = (props) => {\r\n  const dispatch = useDispatch();\r\n  const alias = props.match.params.alias;\r\n  const { raffleData } = useSelector((state) => state.viewRaffle);\r\n\r\n  useEffect(() => {\r\n    dispatch(startGetRaffleData(alias));\r\n    dispatch(startGetPrizes(alias));\r\n  }, [alias, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (raffleData.type === \"colaborative\") {\r\n      dispatch(startGeRaffleLists(alias));\r\n    } else if (raffleData.type === \"simple\") {\r\n      dispatch(startGetTickets(alias));\r\n    }\r\n  }, [raffleData.type]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(cleanData());\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {raffleData ? (\r\n        <>\r\n          <RaffleMainData source=\"Raffle.js\" />\r\n          <ViewPrizeCardList source=\"Raffle.js\" />\r\n          {raffleData.type === \"colaborative\" && <ViewRaffleList />}\r\n          {raffleData.type === \"simple\" && (\r\n            <TicketCardList source=\"Raffle.js\" />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div class=\"alert alert-warning\" role=\"alert\">\r\n          Esta rifa no existe\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  getListByAliasAndListNumberService,\r\n  getPrizesService,\r\n  getRaffleDataService,\r\n  getTicketsFromRaffleListService,\r\n} from \"../services/rafflesApi.service\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startGetRaffleData = (alias) => {\r\n  return async (dispatch) => {\r\n    const data = await getRaffleDataService(alias);\r\n\r\n    if (data.ok) {\r\n      dispatch(getRaffleData(data.raffle));\r\n    } else {\r\n      dispatch(getRaffleData(null));\r\n    }\r\n  };\r\n};\r\n\r\nexport const startGetRaffleListData = (alias, listNumber) => {\r\n  return async (dispatch) => {\r\n    const data = await getListByAliasAndListNumberService(alias, listNumber);\r\n\r\n    if (data.ok) {\r\n      dispatch(getRaffleListData(data.raffleList));\r\n    } else {\r\n      dispatch(getRaffleListData({}));\r\n    }\r\n  };\r\n};\r\n\r\nexport const startGetTicketsByList = (alias, listNumber) => {\r\n  return async (dispatch) => {\r\n    const data = await getTicketsFromRaffleListService(alias, listNumber);\r\n\r\n    console.log(\"startGetTicketsByList\", data);\r\n\r\n    if (data.ok) {\r\n      dispatch(getTicketsByList(data.tickets));\r\n    } else {\r\n      dispatch(getTicketsByList([]));\r\n    }\r\n  };\r\n};\r\n\r\nexport const startGetPrizes = (alias) => {\r\n  return async (dispatch) => {\r\n    const data = await getPrizesService(alias);\r\n\r\n    if (data.ok) {\r\n      dispatch(getPrizes(data.prizes));\r\n    } else {\r\n      dispatch(getPrizes(null));\r\n    }\r\n  };\r\n};\r\n\r\nconst getRaffleData = (raffleData) => ({\r\n  type: types.viewRaffleListGetData,\r\n  payload: raffleData,\r\n});\r\n\r\nconst getRaffleListData = (raffleList) => ({\r\n  type: types.viewRaffleListGetRaffeListData,\r\n  payload: raffleList,\r\n});\r\n\r\nconst getPrizes = (prizes) => ({\r\n  type: types.viewRaffleListGetPrizes,\r\n  payload: prizes,\r\n});\r\n\r\nconst getTicketsByList = (tickets) => ({\r\n  type: types.viewRaffleListGetTickets,\r\n  payload: tickets,\r\n});\r\n","import { faFontAwesome } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faCartPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  startGetPrizes,\r\n  startGetRaffleData,\r\n  startGetRaffleListData,\r\n  startGetTicketsByList,\r\n} from \"../../actions/viewRaffleList.action\";\r\nimport { RaffleMainData } from \"../../components/ui/RaffleMainData\";\r\nimport { TicketCardList } from \"../../components/ui/TicketCardList\";\r\nimport { ViewPrizeCardList } from \"../../components/ui/ViewPrizeCardList\";\r\n\r\nexport const RaffleList = (props) => {\r\n  const { alias, listNumber } = props.match.params;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(startGetRaffleData(alias));\r\n    dispatch(startGetRaffleListData(alias, listNumber));\r\n    dispatch(startGetPrizes(alias));\r\n    dispatch(startGetTicketsByList(alias, listNumber));\r\n  }, [alias, dispatch, listNumber]);\r\n\r\n  return (\r\n    <>\r\n      <RaffleMainData source=\"RaffleList.js\" listNumber={listNumber} />\r\n      <ViewPrizeCardList source=\"RaffleList.js\" />\r\n      <TicketCardList source=\"RaffleList.js\" />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Navbar } from \"../components/ui/Navbar\";\r\nimport { UserMenuNavBar } from \"../components/ui/UserMenuNavBar\";\r\nimport { Cart } from \"../screens/private/Cart\";\r\nimport { CreateRaffle } from \"../screens/private/CreateRaffle\";\r\nimport { Dashboard } from \"../screens/private/Dashboard\";\r\nimport { EditRaffle } from \"../screens/private/EditRaffle\";\r\nimport { MyCollaborations } from \"../screens/private/MyCollaborations\";\r\nimport { MyParticipations } from \"../screens/private/MyParticipations\";\r\nimport { MyRaffles } from \"../screens/private/MyRaffles\";\r\nimport { Contact } from \"../screens/public/Contact\";\r\nimport { Home } from \"../screens/public/Home\";\r\nimport { Login } from \"../screens/public/Login\";\r\nimport { Raffle } from \"../screens/public/Raffle\";\r\nimport { RaffleList } from \"../screens/public/RaffleList\";\r\nimport { PrivateRoute } from \"./PrivateRouter\";\r\n\r\nexport const AppRouter = () => {\r\n  const { uid } = useSelector((state) => state.auth);\r\n  \r\n\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <UserMenuNavBar />\r\n      <div className=\"container mt-5\">\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/cart\"\r\n            component={Cart}\r\n            isAuthenticated={!!uid}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/dashboard\"\r\n            component={Dashboard}\r\n            isAuthenticated={!!uid}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/raffle/create\"\r\n            component={CreateRaffle}\r\n            isAuthenticated={!!uid}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/raffle/edit/:alias\"\r\n            component={EditRaffle}\r\n            isAuthenticated={!!uid}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/myRaffles\"\r\n            component={MyRaffles}\r\n            isAuthenticated={!!uid}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/raffles/collaborations\"\r\n            component={MyCollaborations}\r\n            isAuthenticated={!!uid}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/raffles/participations\"\r\n            component={MyParticipations}\r\n            isAuthenticated={!!uid}\r\n          />\r\n\r\n          <Route path=\"/raffle/:alias/list/:listNumber\" component={RaffleList} />\r\n          <Route path=\"/raffle/:alias\" component={Raffle} />\r\n\r\n          <Route path=\"/contact\" component={Contact} />\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  uid: \"\",\r\n  userName: \"\",\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...action.payload,\r\n      };\r\n\r\n    case types.authLogout:\r\n      return {\r\n        ...initialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  raffleData: null,\r\n  activePrize: null,\r\n  prizeList: [],\r\n  flagSaved: null,\r\n};\r\n\r\nexport const createRaffleReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.raffleFormSetRaffleData:\r\n      return {\r\n        ...state,\r\n        raffleData: action.payload,\r\n      };\r\n\r\n    case types.raffleFormSetFlagSaved:\r\n      return {\r\n        ...state,\r\n        flagSaved: action.payload,\r\n      };\r\n\r\n    case types.raffleFormAddPrize:\r\n      return {\r\n        ...state,\r\n        activePrize: {},\r\n        prizeList: [...state.prizeList, action.payload],\r\n      };\r\n\r\n    case types.raffleFormSelectPrize:\r\n      return {\r\n        ...state,\r\n        activePrize: action.payload,\r\n      };\r\n\r\n    case types.raffleFormCleanSelectedPrize:\r\n      return {\r\n        ...state,\r\n        activePrize: null,\r\n      };\r\n\r\n    case types.raffleFormEditPrize:\r\n      return {\r\n        ...state,\r\n        prizeList: state.prizeList.map((p) =>\r\n          p.tempId === action.payload.tempId ? action.payload : p\r\n        ),\r\n      };\r\n\r\n    case types.raffleFormDeletePrize:\r\n      return {\r\n        ...state,\r\n        prizeList: state.prizeList.filter(\r\n          (p) => p.tempId !== action.payload.tempId\r\n        ),\r\n      };\r\n\r\n    case types.raffleFormCleanAll:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  raffleData: {},\r\n  prizes: [],\r\n  selectedPrize: {},\r\n  raffleLists: [],\r\n};\r\n\r\nexport const editRaffleReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.editRaffleGetData:\r\n      return {\r\n        ...state,\r\n        raffleData: action.payload,\r\n      };\r\n\r\n    case types.editRaffleSelectPrize:\r\n      return {\r\n        ...state,\r\n        selectedPrize: action.payload,\r\n      };\r\n\r\n    case types.editRaffleGetPrizes:\r\n      return {\r\n        ...state,\r\n        prizes: action.payload,\r\n      };\r\n\r\n    case types.editRaffleDeletePrize:\r\n      return {\r\n        ...state,\r\n        prizes: state.prizes.filter((p) => p._id !== action.payload),\r\n      };\r\n\r\n    case types.editRaffleAddPrize:\r\n      return {\r\n        ...state,\r\n        selectedPrize: {},\r\n        prizes: [...state.prizes, action.payload],\r\n      };\r\n\r\n    case types.editRaffleUpdatePrize:\r\n      return {\r\n        ...state,\r\n        selectedPrize: {},\r\n        prizes: state.prizes.map((p) =>\r\n          p._id === action.payload._id ? action.payload : p\r\n        ),\r\n      };\r\n\r\n    case types.editRaffleGetRaffleLists:\r\n      return {\r\n        ...state,\r\n        raffleLists: action.payload,\r\n      };\r\n\r\n    case types.editRaffleAssignList:\r\n      return {\r\n        ...state,\r\n        raffleLists: state.raffleLists.map((rl) =>\r\n          rl._id === action.payload._id ? action.payload : rl\r\n        ),\r\n      };\r\n\r\n    case types.editRaffleAddLists:\r\n      return {\r\n        ...state,\r\n        raffleLists: state.raffleLists.concat(action.payload),\r\n      };\r\n\r\n    case types.editRaffleAddTickets:\r\n      return {\r\n        ...state,\r\n        raffleData: action.payload,\r\n      };\r\n\r\n    case types.editRaffleUpdateListQuantity:\r\n      return {\r\n        ...state,\r\n        raffleData: {\r\n          ...state.raffleData,\r\n          listQuantity: action.payload,\r\n        },\r\n      };\r\n\r\n    case types.editRaffleCleanData:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport const myRafflesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.myRafflesGetAll:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  raffleData: {},\r\n  prizes: [],\r\n  raffleLists: [],\r\n  tickets: [],\r\n};\r\n\r\nexport const viewRaffleReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.viewRaffleGetMainData:\r\n      return {\r\n        ...state,\r\n        raffleData: action.payload,\r\n      };\r\n\r\n    case types.viewRaffleGetPrizes:\r\n      return {\r\n        ...state,\r\n        prizes: action.payload,\r\n      };\r\n\r\n    case types.viewRaffleGetRaffleLists:\r\n      return {\r\n        ...state,\r\n        raffleLists: action.payload,\r\n      };\r\n\r\n    case types.viewRaffleGetTickets:\r\n      return {\r\n        ...state,\r\n        tickets: action.payload,\r\n      };\r\n\r\n    case types.viewRaffleBookTicket:\r\n      return {\r\n        ...state,\r\n        tickets: state.tickets.map((t) =>\r\n          t._id === action.payload._id ? action.payload : t\r\n        ),\r\n      };\r\n\r\n    case types.viewRaffleCleanData:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  raffleData: {},\r\n  prizes: [],\r\n  tickets: [],\r\n  raffleListData: {},\r\n};\r\n\r\nexport const viewRaffleListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.viewRaffleListGetRaffeListData: {\r\n      return {\r\n        ...state,\r\n        raffleListData: action.payload,\r\n      };\r\n    }\r\n\r\n    case types.viewRaffleListGetData:\r\n      return {\r\n        ...state,\r\n        raffleData: action.payload,\r\n      };\r\n\r\n    case types.viewRaffleListGetPrizes:\r\n      return {\r\n        ...state,\r\n        prizes: action.payload,\r\n      };\r\n\r\n    case types.viewRaffleListGetTickets:\r\n      return {\r\n        ...state,\r\n        tickets: action.payload,\r\n      };\r\n\r\n    case types.viewRaffleListBookTicket:\r\n      return {\r\n        ...state,\r\n        tickets: state.tickets.map((t) =>\r\n          t._id === action.payload._id ? action.payload : t\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  tickets: [],\r\n};\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.cartAddTicket:\r\n      return {\r\n        ...state,\r\n        tickets: [...state.tickets, action.payload],\r\n      };\r\n\r\n    case types.cartRemoveTicket:\r\n      return {\r\n        ...state,\r\n        tickets: state.tickets.filter((t) => t._id !== action.payload._id),\r\n      };\r\n\r\n    case types.cartEditTicketData:\r\n      return {\r\n        ...state,\r\n        tickets: state.tickets.map((t) =>\r\n          t._id === action.payload._id ? action.payload : t\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { createRaffleReducer } from \"./createRaffleReducer\";\r\nimport { editRaffleReducer } from \"./editRaffleReducer\";\r\nimport { myRafflesReducer } from \"./myRafflesReducer\";\r\n\r\nimport { viewRaffleReducer } from \"./viewRaffleReducer\";\r\nimport { viewRaffleListReducer } from \"./viewRaffleListReducer\";\r\nimport { cartReducer } from \"./cartReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth: authReducer,\r\n\r\n  createRaffle: createRaffleReducer,\r\n  myRaffles: myRafflesReducer,\r\n  editRaffle: editRaffleReducer,\r\n  viewRaffle: viewRaffleReducer,\r\n  viewRaffleList: viewRaffleListReducer,\r\n  cart: cartReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n\r\n","import { AppRouter } from \"./router/AppRouter\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}